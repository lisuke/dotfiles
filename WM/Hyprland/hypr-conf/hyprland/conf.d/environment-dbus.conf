# Hyprland environment
# exec systemctl --user set-environment key1=value1 key2=value2
# envd = key,value
# env = key,value

#		Wayland
env = XDG_SESSION_TYPE,wayland

#		Hyprland
env = XDG_SESSION_DESKTOP,Hyprland
env = XDG_CURRENT_DESKTOP,Hyprland
exec-once=dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once=systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP


#		Render
env = WLR_RENDERER,vulkan
#env = WLR_RENDERER,gles2
#env = WLR_RENDERER,pixman

#		Libs Platform Intergration
env = CLUTTER_BACKEND,wayland
env = SDL_VIDEODRIVER,wayland

#		QT
env = QT_QPA_PLATFORM,wayland;xcb
#
env = QT_QPA_PLATFORMTHEME,qt5ct
# env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
# env = QT_AUTO_SCREEN_SCALE_FACTOR,1
# env = QT_SCALE_FACTOR,1

#		GDK
#GDK 程序会自动优先选择wayland程序,所以无需设置. x11 覆盖设置将其切换到 Xwayland
# env = GDK_BACKEND,wayland
# env = GDK_SCALE,1


#		JAVA_AWT
env = _JAVA_AWT_WM_NONREPARENTING,1


#		Nvidia
env = WLR_NO_HARDWARE_CURSORS,1
#
env = LIBVA_DRIVER_NAME,nvidia
env = __NV_PRIME_RENDER_OFFLOAD,1
env = __GLX_VENDOR_LIBRARY_NAME,nvidia

env = __VK_LAYER_NV_optimus,NVIDIA_only
env = VK_ICD_FILENAMES,/usr/share/vulkan/icd.d/nvidia_icd.json
# env = VK_ICD_FILENAMES,/usr/share/vulkan/icd.d/intel_icd.x86_64.json:/usr/share/vulkan/icd.d/nvidia_icd.json


#		IM
env = GTK_IM_MODULE,fcitx
env = QT_IM_MODULE,fcitx
env = XMODIFIERS,@im=fcitx
env = SDL_IM_MODULE,fcitx
env = GLFW_IM_MODULE,ibus

#		
env = XCURSOR_SIZE,24

env = ME,lisuke
